import requests
from aiogram import Router, html, types, F
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery

from core.keyboards.delete_help import delete_help, confirm_delete_ikb
from core.utils.states_delete import StatesDelete

profile_router = Router()

user_ads = {}
user_ads_names = {}
user_ads_names_delete = {}


@profile_router.message(Command("profile"))
async def profile_handler(message: types.Message):
    user_id = message.from_user.id
    response = requests.get(f"https://hlp-me-back.onrender.com/user/{user_id}")
    response_status = int(response.status_code)
    print(response_status)
    if response_status == 500:
        await message.answer(
            "–Ω–∞—Ä–∞–∑—ñ —Å–µ—Ä–≤—ñ—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –ø–µ—Ä–µ–ø—Ä–æ—à—É—î–º–æ –∑–∞ –Ω–µ–∑—Ä—É—á–Ω–æ—Å—Ç—ñ üò©\n—Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ"
        )
        return
    response = response.json()
    print(response)
    profile = (
        f"{html.bold('–≤–∞—à –ø—Ä–æ—Ñ—ñ–ª—å:')} \nüë§ —ñ–º'—è: {response['full_name']}\nüñ• username:"
        f" {response['username']}\nüìß email: {response['email']}\nüìû –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:"
        f" {response['phone_number']}\n\n—è–∫—â–æ —Ö–æ—á–µ—Ç–µ {html.underline('–æ–Ω–æ–≤–∏—Ç–∏ –¥–∞–Ω—ñ')} -"
        " /fill_data\n\n"
    )

    helps_responce = requests.get(
        f"https://hlp-me-back.onrender.com/local/dangers/my/{user_id}"
    )

    helps_responce_status = int(helps_responce.status_code)
    print(helps_responce_status)
    if helps_responce_status == 500:
        await message.answer(
            "–Ω–∞—Ä–∞–∑—ñ —Å–µ—Ä–≤—ñ—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –ø–µ—Ä–µ–ø—Ä–æ—à—É—î–º–æ –∑–∞ –Ω–µ–∑—Ä—É—á–Ω–æ—Å—Ç—ñ üò©\n—Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ"
        )
        return

    helps_responce = helps_responce.json()
    print(helps_responce)
    user_ads[user_id] = helps_responce

    if len(helps_responce) == 0:
        helps = "‚ùï –≤–∏ –ø–æ–∫–∏ –Ω–µ —Å—Ç–≤–æ—Ä—é–≤–∞–ª–∏ –∑–∞–ø–∏—Ç–∏ –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É.\n–¥–ª—è —Ü—å–æ–≥–æ —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è /i_need_help"
    else:
        helps = f"üü¢ {html.bold('–≤–∞—à—ñ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–ø–∏—Ç–∏ –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É')}:\n"
        for i in range(len(helps_responce)):
            help = helps_responce[i]
            helps += f"{i+1}. {help['name']}\n"
        helps += "\n‚úèÔ∏è –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–ø–∏—Ç –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ /delete"
    await message.answer(profile + helps, reply_markup=ReplyKeyboardRemove())


@profile_router.message(Command("delete"))
async def delete_help_handler(message: Message, state: FSMContext):
    user_id = message.from_user.id

    # helps_responce = requests.get(
    #     f"https://hlp-me-back.onrender.com/local/dangers/my/{user_id}"
    # )
    # helps_responce_status = int(helps_responce.status_code)
    # print(helps_responce_status)
    # if helps_responce_status == 500:
    #     await message.answer(
    #         "–Ω–∞—Ä–∞–∑—ñ —Å–µ—Ä–≤—ñ—Å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –ø–µ—Ä–µ–ø—Ä–æ—à—É—î–º–æ –∑–∞ –Ω–µ–∑—Ä—É—á–Ω–æ—Å—Ç—ñ üò©\n—Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ"
    #     )
    #     return

    # helps_responce = helps_responce.json()
    # print(helps_responce)

    helps_responce = user_ads[user_id]

    if not len(helps_responce):
        await message.answer(
            "‚ùï –≤–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–∏–ª–∏ –∑–∞–ø–∏—Ç—ñ–≤ –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É.",
            reply_markup=ReplyKeyboardRemove(),
        )
    else:
        helps = []
        for help in helps_responce:
            helps.append(help["name"])

        user_ads_names[user_id] = helps

        kb = await delete_help(names=helps)
        await message.answer("‚úèÔ∏è –æ–±–µ—Ä—ñ—Ç—å –∑ –ø–µ—Ä–µ–ª—ñ–∫—É –Ω–∏–∂—á–µ –∞–±–æ /cancel", reply_markup=kb)
        await state.set_state(StatesDelete.GET_HELP)


# Cancellation option
@profile_router.message(Command("cancel"), StateFilter(StatesDelete))
@profile_router.message(F.text.casefold() == "cancel", StateFilter(StatesDelete))
async def cancel_handler(message: Message, state: FSMContext) -> None:
    """
    Allow user to cancel any action
    """
    current_state = await state.get_state()
    if current_state is None:
        return

    await state.clear()
    await message.answer(
        "üî¥ –≤—ñ–¥–º—ñ–Ω–µ–Ω–æ. –ø–æ–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è —â–µ!",
        reply_markup=ReplyKeyboardRemove(),
    )


@profile_router.message(StatesDelete.GET_HELP)
async def get_help_handler(message: Message, state: FSMContext):
    user_id = message.from_user.id
    if message.text not in user_ads_names[user_id]:
        await message.answer("‚úèÔ∏è –æ–±–µ—Ä—ñ—Ç—å –∑—ñ —Å–ø–∏—Å–∫—É –∞–±–æ –≤—ñ–¥–º—ñ–Ω—ñ—Ç—å /cancel")
    else:
        await message.answer(
            f"{html.bold('üìù –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –¥–∞–Ω—ñ')}:\n–≤–∏ –≤–∏–¥–∞–ª—è—î—Ç–µ {html.underline(message.text)}\n–ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î—Ç–µ?",
            reply_markup=confirm_delete_ikb,
        )
        await state.update_data(name=message.text)
        print("TO DELETE CHECK")
        user_ads_names_delete[user_id] = message.text
    await state.set_state(StatesDelete.CONFIRM)


@profile_router.callback_query(StatesDelete.CONFIRM)
async def confirm_delete_handler(callback: CallbackQuery, state: FSMContext):
    action = callback.data
    print(user_ads_names_delete[callback.from_user.id])
    if action == "delete_confirm":
        context_data = await state.get_data()
        name = context_data.get("name")

        my_user_ads = user_ads[callback.from_user.id]
        for item in my_user_ads:
            if item["name"] == name:
                id = item["_id"]
        response = requests.delete(
            f"https://hlp-me-back.onrender.com/local/dangers/delete/{id}"
        )
        print(response.status_code)
        print(response.json())
        await callback.message.answer(
            "‚úÖ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ", reply_markup=ReplyKeyboardRemove()
        )
        await callback.answer()

    elif action == "delete_decline":
        await callback.message.answer(
            "üî¥ –≤—ñ–¥–º—ñ–Ω–µ–Ω–æ. –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑ –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ /delete",
            reply_markup=ReplyKeyboardRemove(),
        )
        await state.clear()
        await callback.answer()
